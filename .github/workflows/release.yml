name: Android Release

on:
  workflow_dispatch: # Allows you to manually trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get versionName
        id: get_version
        run: |
          VERSION_NAME=$(grep -o 'versionName = "[^"]*"' app/build.gradle.kts | cut -d '"' -f 2)
          echo "versionName=$VERSION_NAME" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  

      - name: Build release APK
        run: ./gradlew assembleRelease 

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"   

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: v${{ steps.get_version.outputs.versionName }}
          release_name: Release ${{ steps.get_version.outputs.versionName }}
          draft: false
          prerelease: false
          
      - name: List files
        run: ls -l app/build/outputs/apk/release
          
      - name: List files 2
        run: ls -l app/release  
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ env.SIGNED_RELEASE_FILE }}
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive Â  
    
